import random
import sys
import os

def generate_clause(n_vars, length):
    vars_in_clause = random.sample(range(1, n_vars + 1), length)
    clause = [random.choice([-1, 1]) * var for var in vars_in_clause]
    return clause

def get_unique_filename(folder, tag):
    os.makedirs(folder, exist_ok=True)
    index = 0
    while True:
        filename = os.path.join(folder, f"{tag}_{index:03d}.cnf")
        if not os.path.exists(filename):
            return filename
        index += 1

def generate_input_file(n_vars, n_clauses, min_clause_len=None, folder='inputs'):
    tag_suffix = f"vars{n_vars}_clauses{n_clauses}"
    tag_suffix += f"_len{min_clause_len}" if min_clause_len else "_rand"
    filename = get_unique_filename(folder, f"input_{tag_suffix}")

    with open(filename, 'w') as f:
        # Comments with metadata
        f.write(f"c CNF formula generated by generate_input.py\n")
        f.write(f"c Number of variables: {n_vars}\n")
        f.write(f"c Number of clauses: {n_clauses}\n")
        if min_clause_len:
            f.write(f"c Clause length: random between {min_clause_len} and {min(min_clause_len + 2, n_vars)}\n")
        else:
            f.write(f"c Clause length: random between 1 and {min(4, n_vars)}\n")
        f.write(f"p cnf {n_vars} {n_clauses}\n")

        for _ in range(n_clauses):
            length = random.randint(min_clause_len, min(min_clause_len + 2, n_vars)) if min_clause_len else random.randint(1, min(4, n_vars))
            clause = generate_clause(n_vars, length)
            f.write(' '.join(map(str, clause)) + " 0\n")

    print(f"File '{filename}' generated successfully.")

if __name__ == '__main__':
    if len(sys.argv) < 3 or len(sys.argv) > 5:
        print("Usage: python generate_input.py <var_count> <clause_count> [min_clause_length] [folder]")
        sys.exit(1)

    n_vars = int(sys.argv[1])
    n_clauses = int(sys.argv[2])
    min_clause_len = int(sys.argv[3]) if len(sys.argv) >= 4 and sys.argv[3].isdigit() else None
    folder = sys.argv[-1] if len(sys.argv) == 5 and not sys.argv[3].isdigit() else 'inputs'

    if n_vars <= 0 or n_clauses <= 0 or (min_clause_len and (min_clause_len <= 0 or min_clause_len > n_vars)):
        print("Invalid parameters.")
        sys.exit(1)

    generate_input_file(n_vars, n_clauses, min_clause_len, folder)
